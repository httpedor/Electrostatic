#version 430

struct Charge{
    int id;
    bool simulated;
    int charge;
    vec2 position;
    vec2 velocity;
};

struct FieldArrow{
    vec2 position;
    vec2 direction;
    float magnitude;
};

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
layout (std430, binding = 1) readonly restrict buffer chargeBuffer{
    Charge charge[];
} chargeBuffer;
layout (std430, binding = 2) writeonly restrict buffer outBuffer{
    FieldArrow fieldArrows[];
} outBuffer;

void main() {
    uint storePos = gl_LocalInvocationIndex;
    uint gSize = gl_WorkGroupSize.x * gl_WorkGroupSize.y;

    outBuffer.fieldArrows[storePos].position = gl_LocalInvocationID.xy;
    outBuffer.fieldArrows[storePos].direction = vec2(0.0, 0.0);
    outBuffer.fieldArrows[storePos].magnitude = 0.0;
}